

---
title: "FB9: Reducing Failure-Inducing Inputs"
---

SUMMARY OF CONTENT:

In the chapter ["Reducing Failure-Inducing Inputs"](https://www.fuzzingbook.org/html/Reducer.html) in the fuzzing book, we are introduced to techniques which can assist us in reading complex inputs generated by fuzzers. This is achieved with automatic reducers.

Reducers take what would be a failure-inducing input and reduce the input down to its issues. This is done through 'Reducer' classes which achieve this function. One of the techniques these classes use is a process known as *delta debugging*, which can be easily "tied" to a running program and is generally far more efficient than GrammarReducer, due to the much shorter list of inputs needed.




PERSONAL REFLECTION:

The reason that reducing is so important is that it allows for easier debugging. By reducing the error down to its single cause, debugging becomes much less of a hassle for software engineers.


RELEVANT ACTION ITEMS:

We can utilize Reducers as software engineers to speed up the pace of debugging our software.

